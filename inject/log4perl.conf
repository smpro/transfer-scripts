log4perl.category.InjectWorker      = INFO, InjectLogfile
#log4perl.category.InjectWorker      = DEBUG, InjectLogfile

log4perl.appender.InjectLogfile          = Log::Log4perl::Appender::File
log4perl.appender.InjectLogfile.filename = sub { return get_logfile( "log" ); }
# See http://search.cpan.org/~mschilli/Log-Log4perl-1.28/lib/Log/Log4perl/Layout/PatternLayout.pm
log4perl.appender.InjectLogfile.layout   = Log::Log4perl::Layout::PatternLayout
log4perl.appender.InjectLogfile.layout.ConversionPattern = [%d] %p %m%n

# Logger to store notifications
log4perl.category.Notify      = INFO, NotificationLogfile

log4perl.appender.NotificationLogfile          = Log::Log4perl::Appender::File
log4perl.appender.NotificationLogfile.filename = sub { return get_logfile( "notify" ); }
# See http://search.cpan.org/~mschilli/Log-Log4perl-1.28/lib/Log/Log4perl/Layout/PatternLayout.pm
log4perl.appender.NotificationLogfile.layout   = Log::Log4perl::Layout::PatternLayout
log4perl.appender.NotificationLogfile.layout.ConversionPattern = [%d] %p %m%n

log4perl.category.NotifyWorker      = INFO, NotifyLogfile

log4perl.appender.NotifyLogfile          = Log::Log4perl::Appender::File
log4perl.appender.NotifyLogfile.filename = sub { return get_logfile( "lognotify" ); }
# See http://search.cpan.org/~mschilli/Log-Log4perl-1.28/lib/Log/Log4perl/Layout/PatternLayout.pm
log4perl.appender.NotifyLogfile.layout   = Log::Log4perl::Layout::PatternLayout
log4perl.appender.NotifyLogfile.layout.ConversionPattern = [%d] %p %m%n

#    %d Current date in yyyy/MM/dd hh:mm:ss format
#    %p Priority of the logging event (%p{1} shows the first letter)

#    %P pid of the current process
# These are useless because everything comes from POE::Component::Log4perl
#    %F File where the logging event occurred
#    %L Line number within the file where the log statement was issued
#    %m The message to be logged
#    %l Fully qualified name of the calling method followed by the
#       callers source the file name and line number between 
#       parentheses.
