 
CREATE OR REPLACE TRIGGER TIER0_INJECTION_INSERT
  BEFORE INSERT ON TIER0_INJECTION
  FOR EACH ROW
BEGIN
  SELECT TIER0_INJECTION_ID_NO.NEXTVAL INTO :NEW.ID FROM DUAL;
  :NEW.CREATE_TIME := SYSTIMESTAMP;
END TIER0_INJECTION_INSERT;
/
 
 
CREATE OR REPLACE TRIGGER TIER0_INJECTION_UPDATE
  BEFORE UPDATE ON TIER0_INJECTION
  FOR EACH ROW
BEGIN
  :NEW.UPDATE_TIME := SYSTIMESTAMP;
END TIER0_INJECTION_UPDATE;
/


CREATE OR REPLACE TRIGGER TIER0_INJECTION_SAFETY
  AFTER UPDATE ON TIER0_INJECTION
  FOR EACH ROW
BEGIN
  UPDATE CMS_STO_MGR_ADMIN.RUN_FILES SET SAFETY    = :NEW.SAFETY    WHERE FILENAME = :NEW.FILENAME;	
  UPDATE CMS_STO_MGR_ADMIN.RUN_FILES SET STATUS    = :NEW.STATUS    WHERE FILENAME = :NEW.FILENAME;	
  UPDATE CMS_STO_MGR_ADMIN.RUN_FILES SET PATHNAME  = :NEW.PATHNAME  WHERE FILENAME = :NEW.FILENAME;	
  UPDATE CMS_STO_MGR_ADMIN.RUN_FILES SET STOP_TIME = :NEW.STOP_TIME WHERE FILENAME = :NEW.FILENAME;	
END TIER0_INJECTION_SAFETY;
/

CREATE OR REPLACE TRIGGER TIER0_INJECTION_COPY
  AFTER INSERT ON TIER0_INJECTION
  FOR EACH ROW
BEGIN
  INSERT INTO CMS_STO_MGR_ADMIN.RUN_FILES (RUNNUMBER,LUMISECTION,INSTANCE,PRODUCER,PATHNAME,FILENAME,HOSTNAME,STREAM,DATASET,STATUS,NEVENTS,FILESIZE,CHECKSUM,CRC,SAFETY,COUNT,TYPE,START_TIME,STOP_TIME) VALUES (:NEW.RUNNUMBER,:NEW.LUMISECTION,:NEW.INSTANCE,:NEW.PRODUCER,:NEW.PATHNAME,:NEW.FILENAME,:NEW.HOSTNAME,:NEW.STREAM,:NEW.DATASET,:NEW.STATUS,:NEW.NEVENTS,:NEW.FILESIZE,:NEW.CHECKSUM,:NEW.CRC,:NEW.SAFETY,:NEW.COUNT,:NEW.TYPE,:NEW.START_TIME,:NEW.STOP_TIME);
END TIER0_INJECTION_COPY;
/


CREATE OR REPLACE TRIGGER TIER0_INJECTION_DEL
  BEFORE DELETE 
  ON TIER0_INJECTION
  FOR EACH ROW
DECLARE
  vStatus VARCHAR2(100) := 'deleted';
BEGIN
  UPDATE CMS_STO_MGR_ADMIN.RUN_FILES SET STATUS = vStatus  WHERE FILENAME = :NEW.FILENAME;
END TIER0_INJECTION_DEL;
/


